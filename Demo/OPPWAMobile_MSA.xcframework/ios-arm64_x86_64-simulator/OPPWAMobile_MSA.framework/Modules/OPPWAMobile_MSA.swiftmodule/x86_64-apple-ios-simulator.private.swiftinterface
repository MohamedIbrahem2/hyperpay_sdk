// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name OPPWAMobile_MSA
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Foundation
@_exported import OPPWAMobile_MSA
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class OPPPaymentStatusResponse : ObjectiveC.NSObject, Swift.Decodable {
  @objc public var resultCode: Swift.String {
    @objc get
  }
  @objc public var resultDescription: Swift.String {
    @objc get
  }
  @objc public var resultDetailsCardholderInfo: Swift.String {
    @objc get
  }
  @objc public var resultPaymentBrand: Swift.String {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
  required public init(from decoder: any Swift.Decoder) throws
}
@objc public enum OPPRequestServerMode : Swift.Int {
  case test
  case live
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class OPPMerchantServer : ObjectiveC.NSObject {
  @objc public static func requestCheckoutId(amount: Swift.Double, currency: Swift.String, paymentType: Swift.String?, serverMode: OPPWAMobile_MSA.OPPRequestServerMode, extraParameters: [Swift.String : Swift.String]?, completionHandler: @escaping (Swift.String?, (any Swift.Error)?) -> Swift.Void)
  @objc public static func requestPaymentStatus(resourcePath: Swift.String, completion: @escaping (OPPWAMobile_MSA.OPPPaymentStatusResponse?, (any Swift.Error)?) -> Swift.Void)
  @objc public static func finalizePayPalContinue(checkoutId: Swift.String, response: OPPWAMobile_MSA.OPPPaymentStatusResponse, completion: @escaping (OPPWAMobile_MSA.OPPPaymentStatusResponse?, (any Swift.Error)?) -> Swift.Void)
  @objc public static func clearCheckoutData(checkoutId: Swift.String)
  @objc public static func isSuccessful(response: OPPWAMobile_MSA.OPPPaymentStatusResponse?) -> Swift.Bool
  @objc public static func isPending(response: OPPWAMobile_MSA.OPPPaymentStatusResponse?) -> Swift.Bool
  @objc deinit
}
extension OPPWAMobile_MSA.OPPRequestServerMode : Swift.Equatable {}
extension OPPWAMobile_MSA.OPPRequestServerMode : Swift.Hashable {}
extension OPPWAMobile_MSA.OPPRequestServerMode : Swift.RawRepresentable {}
